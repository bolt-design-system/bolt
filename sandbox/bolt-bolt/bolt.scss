// @todo Everything in here should be considered for inclusion in correct spot or deleted

/* ------------------------------------ *\
   Custom elements
\* ------------------------------------ */

// Post-processing after all custom elements have been added.
// @TODO: figure out how best to collect these dynamically but still add to the generic layer when we need these to be included.
@each $bolt-custom-element-item in $_bolt-custom-block-elements {
  $bolt-all-custom-block-elements: append($bolt-all-custom-block-elements, unquote($bolt-custom-element-item), comma);
}

@each $bolt-custom-element-item in $_bolt-custom-inline-block-elements {
  $bolt-all-custom-inline-block-elements: append($bolt-all-custom-inline-block-elements, unquote($bolt-custom-element-item), comma) !global;
}

@each $bolt-custom-element-item in $_bolt-custom-inline-elements {
  $bolt-all-custom-inline-elements: append($bolt-all-custom-inline-elements, unquote($bolt-custom-element-item), comma) !global;
}


// Example of adding global generic styles to all custom elements.
@if length($bolt-all-custom-block-elements) > 0 {
  #{$bolt-all-custom-block-elements} {
    @include bolt-margin-bottom(medium);
    display: block;
  }
}

@if length($bolt-all-custom-inline-block-elements) > 0 {
  #{$bolt-all-custom-inline-block-elements} {
    display: inline-block;
    display: inline-flex;
  }
}

@if length($bolt-all-custom-inline-elements) > 0 {
  #{$bolt-all-custom-inline-elements} {
    display: inline;
  }
}


/*
 * SHAME
 */

// Workaround Brightcove Video Player's Hapyak CSS in a ratio component
bolt-ratio .hapyak-player:not(.hapyak-minimal-css) {
  position: absolute !important;
}
