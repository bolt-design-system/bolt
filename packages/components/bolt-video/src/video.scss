@import '@bolt/core';
@import 'videojs-enhancements';
@import 'video-meta';

// Same as max-width of wrapper container
$bolt-video-wrapper--max-width: bolt-breakpoint(xxlarge);
$bolt-video-background-color: rgba(22, 26, 60, .8);
$bolt-video-background-max-height: 50.625vw;


#{$bolt-namespace}-video {
  display: block;
  width: 100%;
  background-color: bolt-color(black); // placeholder color before poster loads up.

  &[is-background-video]{
    @include bolt-margin-right(auto);
    @include bolt-margin-left(auto);
    flex-grow: 1;
    opacity: bolt-opacity(0);
    z-index: 20;
    min-width: 100%;
    max-width: none;
    max-width: 100vh;
    height: calc((90vw * (9 / 16)) - 4rem);
    max-height: 56.25vh;
    pointer-events: none;
    background-color: $bolt-video-background-color;
    transition: opacity 0.3s ease, min-height 0.3s ease;

    @media (max-width: (bolt-breakpoint(small) - 1px)) {
      min-height: calc(#{$bolt-video-background-max-height} + 2.5rem);
    }

    .is-expanded & {
      opacity: bolt-opacity(100);
      pointer-events: auto;
    }

    .video-js {
      @include bolt-margin(0 auto);
      position: relative;
      width: 100%;
      min-width: 0;
      height: 100%;
      pointer-events: none;
      background-color: transparent;
      transition: all 0.4s ease;

      .is-expanded & {
        pointer-events: auto;
      }

      &:not(.vjs-fullscreen) {
        max-width: 1400px;
      }
    }
  }
}


/**
  * 1. 90vw instead of 100vw so the video close button
  * doesn't spill outside of the video container in IE 11 /
  * on Windows
  */
.c-#{$bolt-namespace}-video {
  z-index: bolt-z-index('tooltip');
  width: 100%;
  max-width: none;
  transition: transform .4s cubic-bezier(.645, 0, .355, 1);

  &.c-#{$bolt-namespace}-video--background {
    display: block;
    position: relative;
    max-width: calc(100% - #{bolt-spacing(large)});
    height: $bolt-video-background-max-height;
    max-height: 100%;
    margin: 0 auto;

    @media (max-width: (bolt-breakpoint(small) - 1px)) {
      max-width: calc(100vw - 40px);
    }

    @include bolt-mq(small){
      width: calc(90vw - 7rem);
      max-width: 100vh;
      height: calc((90vw * (9 / 16)) - 4rem);
      max-height: 56.25vh;
    }
  }
}



.c-#{$bolt-namespace}-video__close-button {
  opacity: bolt-opacity(0); // Initial state before brightcove video player kicks in
  position: absolute;
  top: bolt-spacing(xsmall);
  right: bolt-spacing(xsmall);
  z-index: bolt-z-index('tooltip');
  color: bolt-color(orange);
  transition: all 0.3s ease;
  @include bolt-css-vars((
    --#{$bolt-namespace}-theme-icon: bolt-color(orange),
  ));

  @include bolt-mq(small) {
    right: (bolt-spacing(large) / -2) - bolt-spacing(xsmall);
  }

  &:hover {
    @include bolt-opacity(100);
  }

  &:active {
    @include bolt-opacity(60);
  }

  .is-collapsed & {
    @include bolt-opacity(0);
    pointer-events: none;
  }

  .is-expanded & {
    @include bolt-opacity(80);
    pointer-events: auto;
  }
}

.c-#{$bolt-namespace}-video__close-button--icon-to-text {
  @media (max-width: (bolt-breakpoint(small) - 1px)) {
    @include bolt-padding(xsmall 0);
    display: block;
    position: relative;
    top: 0;
    right: 0;
    float: right;
    .c-#{$bolt-namespace}-video__close-button-icon {
      display: none;
    }
  }
  @media (min-width: bolt-breakpoint(small)) {
    position: absolute;
    .c-#{$bolt-namespace}-video__close-button-text {
      @include bolt-visuallyhidden;
    }
  }
}

.c-#{$bolt-namespace}-video__close-button:not(.c-#{$bolt-namespace}-video__close-button--icon-to-text) {
  .c-#{$bolt-namespace}-video__close-button-text {
    @include bolt-visuallyhidden;
  }
}

.c-#{$bolt-namespace}-video__close-button-icon,
.c-#{$bolt-namespace}-video__close-button-text {
  cursor: pointer;
}

.c-#{$bolt-namespace}-video__close-button-text {
  color: bolt-color(white);
  text-decoration: underline;
}


.c-#{$bolt-namespace}-video--hide-controls {
  .video-js .vjs-control-bar {
    display: none;
  }
  .video-js {
    pointer-events: none;
  }
}
