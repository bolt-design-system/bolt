// Lightweight style reset for button and input elements
@mixin bolt-button-reset {
  @include bolt-padding(0);
  @include bolt-font-family(body);
}

@mixin bolt-button-raised() {
  &:not(.c-bolt-button--disabled):not(.c-bolt-button--text):not([disabled]) {
    &:hover,
    &.is-hover {
      @include bolt-shadow('level-20', true);
    }

    &:hover:before,
    &.is-hover:before {
      opacity: bolt-opacity(100);
    }

    &:active,
    &.is-active {
      transform: $bolt-button-translate--active;
    }

    &:active:before,
    &.is-active:before {
      opacity: bolt-opacity(0);
    }
  }
}

@mixin bolt-button {
  @include bolt-button-reset;
  @include bolt-no-select;
  @include bolt-font-weight(semibold);
  @include bolt-button-raised;
  @include bolt-shadow('level-20');

  display: inline-block;
  display: inline-flex;
  flex-direction: row;
  flex-grow: 1;
  align-items: center;
  position: relative;
  transform: translate3d(0, 0, 0);
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  border-radius: $bolt-button-border-radius;
  border-width: $bolt-button-border-width;
  border-style: $bolt-button-border-style;

  &:before {
    content: '';
    display: block;
    opacity: 0.2;
    position: absolute;
    top: 0;
    left: 0;
    z-index: bolt-z-index('background') - 5;
    width: 100%;
    height: 100%;
    pointer-events: none;
    border-radius: $bolt-button-border-radius;
    @include bolt-shadow('level-10', true);
  }
}

/**
  * Button Colors / Types
  */
@mixin bolt-button-style--primary() {
  &,
  &:visited {
    color: bolt-theme(text-on-primary);
    border-color: bolt-theme(primary);
    background-color: bolt-theme(primary);
  }

  &:hover,
  &.is-hover {
    color: bolt-theme(text-on-primary-lighten-15);
    border-color: bolt-theme(primary-lighten-15);
    background-color: bolt-theme(primary-lighten-15);
  }

  &:focus,
  &.is-focus {
    color: bolt-theme(text-on-primary-darken-15);
    border-color: bolt-theme(primary-darken-15);
    background-color: bolt-theme(primary-darken-15);
  }

  &:active,
  &.is-active {
    color: bolt-theme(text-on-primary-darken-25);
    border-color: bolt-theme(primary-darken-25);
    background-color: bolt-theme(primary-darken-25);
  }
}

@mixin bolt-button-style--secondary() {
  &,
  &:visited {
    color: bolt-theme(text-on-secondary);
    border-color: bolt-theme(secondary);
    background-color: bolt-theme(secondary);
  }

  &.is-hover,
  &:hover {
    color: bolt-theme(text-on-secondary-lighten-5);
    border-color: bolt-theme(secondary-lighten-5);
    background-color: bolt-theme(secondary-lighten-5);
  }

  &:focus,
  &.is-focus {
    color: bolt-theme(text-on-secondary-darken-3);
    border-color: bolt-theme(secondary-darken-3);
    background-color: bolt-theme(secondary-darken-3);
  }

  &:active,
  &.is-active {
    color: bolt-theme(text-on-secondary-darken-10);
    border-color: bolt-theme(secondary-darken-10);
    background-color: bolt-theme(secondary-darken-10);
  }
}

@mixin bolt-button-style--text() {
  text-decoration: none;
  border-color: transparent;
  background-color: transparent;
  $bolt-theme-link-default: bolt-color(indigo, light);

  // Removing shadows for text buttons
  &,
  &:before {
    border-radius: 0;
    box-shadow: none;
  }

  & {
    opacity: bolt-opacity(100);
    color: bolt-theme(headline-link);
  }

  &:visited {
    opacity: bolt-opacity(100);
  }

  &:hover:not([disabled]) {
    opacity: $bolt-global-link-hover-opacity;
  }

  &:focus:active,
  &:active {
    opacity: $bolt-global-link-active-opacity;
  }
}

@mixin bolt-button-style--disabled() {
  cursor: not-allowed;

  &,
  &:visited,
  &:hover,
  &:active {
    color: bolt-theme(text-disabled);
    border-color: bolt-theme(disabled);
    background-color: bolt-theme(disabled);
  }

  &:before,
  &:hover:before,
  &:active:before {
    opacity: bolt-opacity(100);
  }

  &,
  &:hover,
  &:active {
    transform: none;
  }
}

// Teal-specific color. Needs refactoring to combine with primary button logic above ^
@mixin bolt-button-color--teal {
  $button-background-color-default: bolt-color(indigo, light);
  $button-background-color-hover: mix(
    $bolt-global-button-hover-color,
    $button-background-color-default,
    $bolt-global-button-hover-mix
  );
  $button-background-color-active: mix(
    $bolt-global-button-active-color,
    $button-background-color-default,
    $bolt-global-button-active-mix
  );
  &.c-bolt-button,
  &.c-bolt-button:visited {
    color: bolt-text-contrast($button-background-color-default);
    border-color: $button-background-color-default;
    background-color: $button-background-color-default;
  }
  &:focus,
  &:hover {
    color: bolt-text-contrast($button-background-color-default);
    border-color: $button-background-color-hover;
    background-color: $button-background-color-hover;
  }
  &:active {
    color: bolt-text-contrast($button-background-color-default);
    border-color: $button-background-color-active;
    background-color: $button-background-color-active;
  }
}

// @todo: refactor and revive state color options
// .c-bolt-button--success {
//   @include bolt-button-color(success);
// }
// .c-bolt-button--warning {
//   @include bolt-button-color(warning);
// }
// .c-bolt-button--error {
//   @include bolt-button-color(error);
// }

@mixin bolt-button-style($style) {
  @if ($style == 'primary') {
    @include bolt-button-style--primary;
  } @else if ($style == 'secondary') {
    @include bolt-button-style--secondary;
  } @else if ($style == 'text') {
    @include bolt-button-style--text;
  } @else if ($style == 'disabled') {
    @include bolt-button-style--disabled;
  }
}
