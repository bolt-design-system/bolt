/*------------------------------------*\
  TOOLS - EXPORT JSON
\*------------------------------------*/

/** Wrapper to help format and export Sass maps as JSON files **/


@function bolt-to-string($value) {
  @return inspect($value);
}

// recursively take a sass map passed in and convert any keys / values to strings to make it possible to export colors as JSON
@function bolt-normalize-data($map-old, $map-new, $override: true) {
  $case: "lower-case";
  // Iterate through each value of the new map
  @each $key, $new-value in $map-new {
    // Check if that value already exists on the old map
    @if type-of($new-value) == map and type-of($key) != color and map-has-key($map-old, $key) {
      // There is an existing key
      $old-value: map-get($map-old, $key);
      @if type-of($new-value) == map and type-of($old-value) == map {
        // If both are maps, recurse regardless of $override
        $merged-value: bolt-normalize-data($old-value, $new-value);
        $stringified-key: bolt-to-string($key);
        $new-key: call("to-" + $case, $stringified-key);
        $map-old: map-merge(map-remove($map-old, $key), (
          quote($new-key): $merged-value
        ));

      }@else{
        // Otherwise check $override
        @if $override{
          $stringified-key: bolt-to-string($key);
          $new-key: call("to-" + $case, $stringified-key);
          $map-old: map-merge(map-remove($map-old, $key), (
            quote($new-key): $new-value
          ));
        }
      }
    }@else{
      // There is no existing key so add
      $stringified-key: bolt-to-string($key);
      $new-key: call("to-" + $case, $stringified-key);

      $map-old: map-merge(map-remove($map-old, $key), (
        quote($new-key): $new-value
      ));
    }
  }
  @return $map-old;
}


@function bolt-export-data(
  $filename,
  $map,
  $prefix: '',
  $suffix: '',
  $extend: false
){
  $sass-map: bolt-normalize-data($map, $map);
  $sass-map: export_data($filename, $sass-map, (
    prefix: $prefix,
    suffix: $suffix,
    extend: $extend
  ));

  // $json-colors: bolt-normalize-data($palettes, $palettes);
  // $json-colors: jsonexport('colors.sass.json', $json-colors);

  @return $map;
}
