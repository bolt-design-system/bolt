// Add additional spacing size rules for handling auto and zero'd rules
$bolt-spacing-sizes-extras: (
  none: 0,
  auto: auto,
);

// Merge extra size options into Sass Map of sizes that already exist, tacking on to the front
$bolt-spacing-sizes: map-merge($bolt-spacing-sizes-extras, $bolt-spacing-sizes);

// prefix prop name if value set
@function bolt-prefix-prop-name($propName) {
  @if ($propName != '') {
    @return '-' + $propName;
  } @else {
    @return $propName;
  }
}

@mixin bolt-spacing-sizes-utils($breakpoint: null) {
  @each $prop in $bolt-spacing-properties {
    @for $i from 1 through length($bolt-spacing-directions) {
      $direction: nth($bolt-spacing-directions, $i);

      @each $type in $bolt-spacing-types {
        @each $size, $value in $bolt-spacing-sizes {
          $sizeName: bolt-prefix-prop-name($size);
          $typeName: bolt-prefix-prop-name($type);
          $directionName: bolt-prefix-prop-name($direction);
          $propName: '-' + $prop;

          @if ($size== 'none' and $value == 0) {
            $size: 0;
          }

          // Ex. .u-bolt-margin-left-large@small
          // Ex. .u-bolt-margin-left-squish
          // Ex. .u-bolt-margin-right

          .u-bolt#{$propName}#{$directionName}#{$sizeName}#{$typeName}#{$breakpoint} {
            $sizes: null null null null;
            $size-index: index($bolt-spacing-directions, $direction);
            @if ($direction != '') {
              $sizes: set-nth($sizes, $size-index - 1, $size);
            } @else {
              $sizes: $size $size $size $size;
            }
            $normalizedSizes: _bolt-normalize-spacing-sizes($sizes, null);

            @include _bolt-directional-property(
              #{$prop},
              false,
              $normalizedSizes,
              important
            );
          }
        }
      }
    }
  }
}

// Negative margins
// Dev note: It takes regular margin spacing and multiply it by -1.
@mixin bolt-negative-margin-utils($breakpoint: null) {
  @for $direction from 1 through length($bolt-spacing-directions) {
    $direction: nth($bolt-spacing-directions, $direction);

    @each $spacing-value in $bolt-spacing-values {
      $spacing-value-name: nth($spacing-value, 1);
      $spacing: '';

      @if $spacing-value-name != '' {
        $spacing: '-' + $spacing-value-name;
      }

      @if $direction != top and $direction != bottom {
        .u-bolt-negative-margin-#{$direction}#{$spacing}#{$breakpoint} {
          margin-#{$direction}: bolt-spacing(#{$spacing-value-name}) *
            -1 !important;
        }
      } @else {
        .u-bolt-negative-margin-#{$direction}#{$spacing}#{$breakpoint} {
          margin-#{$direction}: bolt-v-spacing(#{$spacing-value-name}) *
            -1 !important;
        }
      }
    }
  }
}

// Generate regular and responsive spacing util classes
@include bolt-spacing-sizes-utils;
@include bolt-negative-margin-utils;

@each $breakpoint in $bolt-breakpoints {
  $breakpointName: nth($breakpoint, 1);
  @include bolt-mq($breakpointName) {
    @include bolt-spacing-sizes-utils(\@#{$breakpointName});
    @include bolt-negative-margin-utils(\@#{$breakpointName});
  }
}

// Export spacing data
@include export-data('spacing-sizes.bolt.json', $bolt-spacing-sizes);
@include export-data('spacing-properties.bolt.json', $bolt-spacing-properties);
@include export-data('spacing-directions.bolt.json', $bolt-spacing-directions);
