/* ==========================================================================
   #GRID
   ========================================================================== */

@import '@bolt/core-v3.x';

/**
 * 1. Workaround to Safari layout getting thrown off when using a negative letter-spacing to remove inline-block whitespace
 *    @TODO: remove when v1 grid with CSS Grid support rolls out
 * 2. Reset local font-size inheritance to prevent components w/o default font sizes from breaking
 */
.o-bolt-grid {
  flex: 1 1 auto; //Automatically auto fill any available space, in case a grid is nested inside of a flexbox-friendly parent container.
  margin: 0;
  margin-left: calc(var(--bolt-spacing-x-medium) * -1);
  padding: 0;
  font-size: 0; /* stylelint-disable-line */ /* [1] */
  list-style: none;
}

.o-bolt-grid__cell {
  display: inline-block;
  position: relative;
  padding-left: var(--bolt-spacing-x-medium);
  font-size: 1rem; /* stylelint-disable-line */ /* [2] */
  vertical-align: top;
}

// Outer grid wrapper used with the "bordered" variation in order to hide overflowing cell padding / borders.
.o-bolt-grid-wrapper {
  overflow: hidden;
}

$bolt-grid-border-width: 2px;
$bolt-grid-border-color: bolt-theme(border, 0.2);

.o-bolt-grid--matrix.o-bolt-grid--border {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--bolt-spacing-y-small) * -1);
  margin-right: calc(var(--bolt-spacing-x-small) * -1);
  margin-bottom: calc(var(--bolt-spacing-y-small) * -1);
  margin-left: calc(var(--bolt-spacing-x-small) * -1);
  padding: 0;
  list-style: none;

  > .o-bolt-grid__cell {
    margin-top: $bolt-grid-border-width * -1;
    margin-right: $bolt-grid-border-width * -1;
    padding: var(--bolt-spacing-y-small) var(--bolt-spacing-x-small);
    border-bottom-color: $bolt-grid-border-color;
    border-bottom-style: solid;
    border-bottom-width: $bolt-grid-border-width;
    border-left-color: $bolt-grid-border-color;
    border-left-style: solid;
    border-left-width: $bolt-grid-border-width;
  }
}

.o-bolt-grid--rev {
  direction: rtl;

  > .o-bolt-grid__cell {
    direction: ltr;
  }
}

/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.o-bolt-grid`.
 */
.o-bolt-grid--full {
  margin-left: 0;

  > .o-bolt-grid__cell {
    padding-left: 0;
  }
}

/**
 * Centered grids align grid cells centrally without needing to use push or pull
 * classes. Extends `.o-bolt-grid`.
 */
.o-bolt-grid--center {
  justify-content: center;
  text-align: center;

  > .o-bolt-grid__cell {
    text-align: left;
  }
}

/**
 * Align grid cells vertically (`.o-bolt-grid--middle` or `.o-bolt-grid--bottom`). Extends
 * `.o-bolt-grid`.
 */
.o-bolt-grid--middle {
  &.o-bolt-grid--flex {
    align-items: center;
  }

  > .o-bolt-grid__cell {
    vertical-align: middle;
  }
}

.o-bolt-grid--bottom {
  &.o-bolt-grid--flex {
    align-items: flex-end;
  }

  > .o-bolt-grid__cell {
    vertical-align: bottom;
  }
}

/**
 * Align the entire grid to the right. Extends `.grid`.
 */
.o-bolt-grid--right {
  justify-content: flex-end;
  text-align: right;

  > .o-bolt-grid__cell {
    text-align: left;
  }
}

.o-bolt-grid__cell--middle {
  align-self: center;
  vertical-align: middle;
}

.o-bolt-grid__cell--top {
  align-self: flex-start;
  vertical-align: top;
}

.o-bolt-grid__cell--bottom {
  align-self: flex-end;
  vertical-align: bottom;
}

$bolt-object-grid-sizes: xsmall, small, large, xlarge;

@each $size in $bolt-object-grid-sizes {
  .o-bolt-grid--#{$size} {
    margin-left: calc(var(--bolt-spacing-x-#{$size}) * -1);

    > .o-bolt-grid__cell {
      padding-left: var(--bolt-spacing-x-#{$size});
    }
  }
}

.o-bolt-grid--matrix {
  @each $size in $bolt-object-grid-sizes {
    &.o-bolt-grid--#{$size} {
      margin-bottom: calc(var(--bolt-spacing-y-#{$size}) * -1);

      > .o-bolt-grid__cell {
        padding-bottom: var(--bolt-spacing-y-#{$size});
      }
    }
  }
}

.o-bolt-grid--flex {
  display: flex;
  flex-flow: row wrap;
}
