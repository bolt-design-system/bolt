@import '~@bolt/core/styles/index.scss';

/* ------------------------------------ *\
   List
\* ------------------------------------ */

@include bolt-custom-element('bolt-list', block, medium);

.c-bolt-list {
  @include bolt-margin(0);
  @include bolt-padding(0);

  list-style: none;
}

.c-bolt-list__item {
  @include bolt-margin(0);
  @include bolt-padding(0);

  display: block;
}

.c-bolt-list--display-block {
  display: flex;
  flex-flow: column wrap;
}

.c-bolt-list--display-inline {
  display: inline-flex;
  flex-flow: row wrap;
}

@each $breakpoint in $bolt-breakpoints {
  $breakpoint-name: nth($breakpoint, 1);
  .c-bolt-list--display-inline\@#{$breakpoint-name} {
    display: flex;
    flex-flow: column wrap;

    @include bolt-mq($breakpoint-name) {
      display: inline-flex;
      flex-flow: row wrap;
    }
  }
}

@each $spacing-value in $bolt-spacing-values {
  $spacing-value-name: nth($spacing-value, 1);
  .c-bolt-list--spacing-#{$spacing-value-name} {
    margin-right: bolt-spacing(#{$spacing-value-name}) * -1;
    margin-bottom: bolt-v-spacing(#{$spacing-value-name}) * -1;

    .c-bolt-list__item {
      @include bolt-margin-right(#{$spacing-value-name});
      @include bolt-margin-bottom(#{$spacing-value-name});
    }
  }

  .c-bolt-list--spacing-#{$spacing-value-name}.c-bolt-list--inset {
    @include bolt-margin-right(0);
    @include bolt-margin-bottom(0);

    .c-bolt-list__item {
      @include bolt-margin-right(0);
      @include bolt-margin-bottom(0);
      @include bolt-padding(#{$spacing-value-name});
    }
  }

  .c-bolt-list--spacing-#{$spacing-value-name}.c-bolt-list--display-block[class^='c-bolt-list--separator'],
  .c-bolt-list--spacing-#{$spacing-value-name}.c-bolt-list--display-block[class*=' c-bolt-list--separator'] {
    .c-bolt-list__item:not(:last-child) {
      @include bolt-padding-bottom(#{$spacing-value-name});
    }
  }

  .c-bolt-list--spacing-#{$spacing-value-name}.c-bolt-list--display-inline[class^='c-bolt-list--separator'],
  .c-bolt-list--spacing-#{$spacing-value-name}.c-bolt-list--display-inline[class*=' c-bolt-list--separator'] {
    .c-bolt-list__item:not(:last-child) {
      @include bolt-padding-right(#{$spacing-value-name});
    }
  }
}

$bolt-list-alignments: start, center, end;

@each $alignment in $bolt-list-alignments {
  .c-bolt-list--align-#{$alignment} {
    &.c-bolt-list--display-inline {
      @if $alignment != 'center' {
        justify-content: flex-#{$alignment};
      }
      @else {
        justify-content: #{$alignment};
      }
    }
  }

  .c-bolt-list--valign-#{$alignment} {
    &.c-bolt-list--display-inline {
      @if $alignment != 'center' {
        align-items: flex-#{$alignment};
      }
      @else {
        align-items: #{$alignment};
      }
    }
  }
}

$bolt-list-separator-styles: solid, dashed;

@each $separator-style in $bolt-list-separator-styles {
  .c-bolt-list--separator-#{$separator-style} {
    .c-bolt-list__item:not(:last-child) {
      border: 0;
      border-color: rgba(bolt-color(gray), 0.25);
      border-style: #{$separator-style};
    }
  }
}

[class^='c-bolt-list--separator'],
[class*=' c-bolt-list--separator'] {
  &.c-bolt-list--display-block {
    .c-bolt-list__item:not(:last-child) {
      border-bottom-width: 1px;
    }
  }

  &.c-bolt-list--display-inline {
    .c-bolt-list__item:not(:last-child) {
      border-right-width: 1px;
    }
  }
}
