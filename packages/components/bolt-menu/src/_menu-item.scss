/* ------------------------------------ *\
   Menu
\* ------------------------------------ */

@import '@bolt/core-v3.x';
@import './_menu-settings-and-tools.scss';

// Register Custom Block Element
@include bolt-repeat-rule(('bolt-menu-item', ':host')) {
  display: block;

  & + * {
    border-top-color: $bolt-menu-border-color;
    border-top-style: $bolt-menu-border-style;
    border-top-width: $bolt-menu-border-width;
  }
}

.c-bolt-menu-item {
  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-gap: var(--bolt-spacing-x-xsmall);
  align-items: center;
  position: relative;
  transform: translate3d(0, 0, 0);
  // [Mai] reset font styles here so it doesn't inherit from parent container.
  font-family: var(--bolt-type-font-family-body);
  font-size: var(--bolt-type-font-size-small);
  font-weight: var(--bolt-type-font-weight-regular);
  color: bolt-theme(text);
  line-height: var(--bolt-type-line-height-small);
  transition: background-color $bolt-transition;

  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
    z-index: 0; // Resets the stacking order to be the lowest within the item container.
    user-select: none;
  }

  &:before {
    top: 0;
    left: 0;
    transform: translate3d(0, 0, 0);
    width: 0;
    height: 100%;
    background-color: bolt-theme(link, 0.05);
    transition: width $bolt-transition, border-radius $bolt-transition;
  }

  &:after {
    top: 50%;
    bottom: 0;
    left: 0;
    transform: translate3d(0, -50%, 0);
    width: 3px;
    height: 0;
    border-radius: bolt-border-radius(small);
    background-color: bolt-color(teal);
    transition: height $bolt-transition;
  }

  bolt-trigger:hover &,
  button:hover & {
    color: bolt-theme(link);

    &:before {
      width: 100%;
      border-radius: 0;
    }
  }

  bolt-trigger:active &,
  button:active & {
    background-color: bolt-theme(link, 0.1);
  }

  /* This doesn't work in IE. Oh well. */
  bolt-trigger:focus-within &,
  button:focus-within & {
    font-weight: var(--bolt-type-font-weight-semibold);
    color: bolt-theme(headline);

    &:before {
      width: 100%;
      border-radius: 0;
    }

    &:after {
      height: calc(100% - var(--bolt-spacing-y-xsmall) * 2);
    }
  }

  bolt-copy-to-clipboard & {
    width: 100%;
  }
}

[class*='c-bolt-menu-item__icon-'] {
  transform: translateY(-0.05em);

  > * {
    display: grid;
    place-items: center;
  }

  bolt-icon {
    display: block;
  }
}

.c-bolt-menu-item__icon-after {
  margin-left: auto;
}

// Spacing
@each $value in $bolt-menu-spacing-values {
  .c-bolt-menu-item--spacing-#{$value} {
    padding: calc(var(--bolt-spacing-y-#{$value}) / 2)
      var(--bolt-spacing-x-#{$value});
  }
}
