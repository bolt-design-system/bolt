/* ------------------------------------ *\
   Menu
\* ------------------------------------ */

@import '@bolt/core';
@import './_menu-settings-and-tools.scss';

// Register Custom Block Element
@include bolt-repeat-rule(('bolt-menu-item', ':host')) {
  display: block;
}

.c-bolt-menu-item {
  @include bolt-font-family(body);
  @include bolt-font-size(xsmall);
  @include bolt-font-weight(regular);

  display: block;
  position: relative;
  transform: translate3d(0, 0, 0);
  color: bolt-theme(text);
  border-bottom-color: $bolt-menu-border-color;
  border-bottom-style: $bolt-menu-border-style;
  border-bottom-width: $bolt-menu-border-width;
  transition: background-color $bolt-transition;

  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
    z-index: 0; // Resets the stacking order to be the lowest within the item container.
    user-select: none;
  }

  &:before {
    top: 0;
    left: 0;
    transform: translate3d(0, 0, 0);
    width: 0;
    height: 100%;
    background-color: bolt-theme(link, 0.05);
    transition: width $bolt-transition, border-radius $bolt-transition;
  }

  &:after {
    top: 50%;
    bottom: 0;
    left: 0;
    transform: translate3d(0, -50%, 0);
    width: 3px;
    height: 0;
    border-radius: bolt-border-radius(small);
    background-color: bolt-color(teal);
    transition: height $bolt-transition;
  }

  @at-root bolt-trigger:hover & {
    color: bolt-theme(link);

    &:before {
      width: 100%;
      border-radius: 0;
    }
  }

  @at-root bolt-trigger:active & {
    background-color: bolt-theme(link, 0.1);
  }

  /* This doesn't work in IE. Oh well. */
  @at-root bolt-trigger:focus-within & {
    @include bolt-font-weight(semibold);
    color: bolt-theme(headline);

    &:before {
      width: 100%;
      border-radius: 0;
    }

    &:after {
      height: calc(100% - var(--bolt-spacing-y-xsmall) * 2);
    }
  }
}

.c-bolt-menu-item--last-item {
  border-bottom-width: 0;
}

// Spacing
@each $value in $bolt-menu-spacing-values {
  .c-bolt-menu-item--spacing-#{$value} {
    padding: calc(var(--bolt-spacing-y-#{$value}) / 2)
      var(--bolt-spacing-x-#{$value});
  }
}
