<p>You can offset the sticky position of the Navbar via two props: <code>scroll_offset_selector</code> and <code>scroll_offset</code>. <code>scroll_offset_selector</code> accepts a CSS selector and offsets the navbar by the total height of the matching elements. You can further fine-tune the offset by passing an integer to <code>scroll_offset</code> which will be converted to a pixel value.</p>
<p>Navbar automatically sets an offset for the Page Header component.</p>

{% set banner %}
  {% include '@bolt-components-banner/banner.twig' with {
    content: 'Sticky element with matching <code>scroll_offset_selector</code>',
    status: 'warning',
  } only %}
{% endset %}

{% include '@bolt-components-sticky/sticky.twig' with {
  content: banner,
  attributes: {
    class: [
      'u-bolt-margin-bottom-large',
      'js-sticky-target',
    ],
  },
} only %}

{% set navbar_data = [
  {
    link: {
      content: 'Section 1',
      attributes: {
        href: '#section-1'
      }
    }
  },
  {
    link: {
      content: 'Section 2',
      attributes: {
        href: '#section-2'
      }
    }
  },
  {
    link: {
      content: 'Section 3',
      attributes: {
        href: '#section-3'
      }
    }
  },
  {
    link: {
      content: 'Section 4',
      attributes: {
        href: '#section-4'
      }
    }
  },
  {
    link: {
      content: 'Section 5',
      attributes: {
        href: '#section-5'
      }
    }
  }
] %}

{% set navbar_items %}
  {% for item in navbar_data %}
    {% include '@bolt-components-navbar/navbar-li.twig' with item only %}  
  {% endfor %}
{% endset %}

{% set navbar_list %}
  {% include '@bolt-components-navbar/navbar-ul.twig' with { content: navbar_items } only %}  
{% endset %}

{% include '@bolt-components-navbar/navbar.twig' with {
  title: {
    content: 'Title Text',
    icon: {
      name: 'marketing-gray'
    }
  },
  links: navbar_list,
  scroll_offset_selector: '.js-sticky-target',
  scroll_offset: 10
} only %}

<div style="height: 200vh"></div>
