@import '@bolt/core-v3.x';

/**
 * Text Link
 *
 * Dev notes:
 * 1. Custom icons must be a square and the height must equal the text's font-size, hence 1em.
 * 2. Zero width no-break space is passed to the icon container's :before and :after pseudo elements, combine that with nowrap white-space on the icon container, and it will make sure that an icon never wraps to the next line by itself, it will always wrap with the final word of the text. See: https://codepen.io/mikemai2awesome/pen/OJXbqwe?editors=0100
 * 3. Temporary fix for icon + text bad vertical alignment.
 * 4. `em` unit is used to make sure the spacing between icon and text is relative to the text's font-size.
 */

.e-bolt-text-link {
  @include bolt-button-native-styles-reset;
  @include bolt-text-link;
}

[class*='e-bolt-text-link__icon'] {
  white-space: nowrap;

  &:before,
  &:after {
    content: '\FEFF'; /* [2] */
  }

  > img {
    width: 1em; /* [1] */
    height: 1em; /* [1] */
  }

  > img,
  > bolt-icon:not([size]) {
    display: inline-flex;
    transform: translateY(0.18em); /* [3] */
    vertical-align: baseline;
  }
}

.e-bolt-text-link__icon-before {
  margin-right: calc(
    var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-xxsmall) * 1em
  ); /* [4] */

  > bolt-icon[size] {
    margin-right: var(--bolt-spacing-x-xxsmall);
  }
}

.e-bolt-text-link__icon-after {
  margin-left: calc(
    var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-xxsmall) * 1em
  ); /* [4] */

  > bolt-icon[size] {
    margin-left: var(--bolt-spacing-x-xxsmall);
  }
}

.e-bolt-text-link--reversed-underline {
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

.e-bolt-text-link--block {
  &:after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}

button.e-bolt-text-link--block {
  width: 100%;
}

/**
 * These are error messages for when a developer uses <a> and <button> incorrectly with `.e-bolt-text-link`.
 */
a.e-bolt-text-link[type],
a.e-bolt-text-link:not([href]),
button.e-bolt-text-link[href],
button.e-bolt-text-link[target],
button.e-bolt-text-link:not([type]) {
  &:after {
    display: inline-block;
    transform: scale(0.8);
    padding: 0 var(--bolt-spacing-x-xsmall);
    font-weight: var(--bolt-type-font-weight-semibold);
    color: var(--bolt-color-error);
    border-radius: bolt-border-radius(small);
    box-shadow: 0 0 0 1px currentColor;
    background-color: var(--bolt-color-error-light);
    transform-origin: 0 50%;
  }
}

a.e-bolt-text-link[type] {
  &:after {
    content: 'This <a> element should not have the "type" attribute.';
  }
}

a.e-bolt-text-link:not([href]):not([name]) {
  &:after {
    content: 'This <a> element is missing the "href" attribute.';
  }
}

button.e-bolt-text-link[href] {
  &:after {
    content: 'This <button> element should not have the "href" attribute.';
  }
}

button.e-bolt-text-link[target] {
  &:after {
    content: 'This <button> element should not have the "target" attribute.';
  }
}

button.e-bolt-text-link:not([type]) {
  &:after {
    content: 'This <button> element is missing the "type" attribute.';
  }
}
