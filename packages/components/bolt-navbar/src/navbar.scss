@import '@bolt/core-v3.x';

/* ------------------------------------ *\
   Navbar
\* ------------------------------------ */

$bolt-navbar-title-transition: $bolt-transition;
$bolt-navbar-xsmall-bp: 420px; // Slightly increase the default 400px xsmall breakpoint to be better optimized for larger plus-sized mobile devices -- value shared by the bolt-navbar, bolt-nav-priority, and bolt-navlink components

bolt-navbar {
  @include bolt-margin-top(0); // workaround to -.5px in bolt-full-bleed
  @include bolt-margin-bottom(0); // workaround to -.5px in bolt-full-bleed

  // @todo: remove once Navbar refactored to have theming classes added to the `.c-bolt-navbar` inner.
  &[width*='full'] {
    @include bolt-full-bleed;
  }

  display: block;
  overflow: visible;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2);
}

.c-bolt-navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  width: 100%;
  max-width: bolt-breakpoint(xxlarge);
  margin: 0 auto;
  padding-top: var(--bolt-spacing-y-small);
  padding-right: var(--bolt-spacing-x-small);
  padding-left: var(--bolt-spacing-x-small);

  > *:not(:last-child) {
    margin-right: var(--bolt-spacing-x-small);
  }

  @include bolt-mq($bolt-navbar-xsmall-bp) {
    padding-right: $bolt-wrapper-padding;
    padding-left: $bolt-wrapper-padding;
  }

  @include bolt-if-browser-supports-display-contents {
    @media screen and (max-width: $bolt-navbar-xsmall-bp) {
      padding-top: 0;
    }
  }

  @include bolt-mq(medium) {
    padding-right: $bolt-wrapper-padding-at-medium-bp;
    padding-left: $bolt-wrapper-padding-at-medium-bp;
  }

  /**
    * 1. Global spacing fallbacks if CSS variables aren't supported
    */
  > * {
    padding-bottom: var(--bolt-spacing-y-small);
  }

  @include bolt-if-browser-supports-display-contents {
    @media screen and (max-width: $bolt-navbar-xsmall-bp) {
      display: grid;
      flex-direction: row;
      justify-content: center;
      align-content: center;
      align-items: center;
      grid-template-columns: var(--bolt-spacing-x-small) auto 1fr var(
          --bolt-spacing-y-medium
        );
      grid-template-rows: 1fr auto;
      padding-right: 0;
      padding-left: 0;
    }
  }

  &--center {
    @include bolt-mq(xsmall) {
      flex-wrap: wrap;
      justify-content: center;
    }

    > *:first-child {
      align-self: center;
      padding-top: var(--bolt-spacing-y-xsmall);
    }

    > *:only-child {
      padding-top: var(--bolt-spacing-y-xsmall);
      padding-bottom: var(--bolt-spacing-y-xsmall);
    }
  }

  // Don't include these inner "full-bleed" styles till Navbar is updated to support theming classes internally,
  // otherwise full bleed + center styling combos are broken
  // @todo: uncomment once the [width*="full"] updates from above ^ are addressed
  // &--full {
  //   @include bolt-full-bleed;
  // }

  &--small {
    padding-top: var(--bolt-spacing-y-xsmall);

    > * {
      padding-bottom: var(--bolt-spacing-y-xsmall);
    }
  }
}

// Nav title
.c-bolt-navbar__title {
  display: flex;
  flex-shrink: 1; // make sure the title can wrap to multiple lines and shrink if needed, but only when absolutely necessary (prevents jumps when resizing)
  flex-wrap: nowrap;
  align-items: center;
  align-self: center;
  margin-right: var(--bolt-spacing-x-small); // Maintain space between items
  padding-bottom: var(--bolt-spacing-y-small);
  color: bolt-theme(headline);
  white-space: nowrap;

  @include bolt-mq($until: xsmall) {
    padding-top: var(--bolt-spacing-y-xsmall);
    padding-bottom: var(--bolt-spacing-y-xsmall);
    grid-column: 2 / span 1;
  }

  &:only-child {
    margin-right: auto;
  }

  > *:not(:last-child) {
    margin-right: var(--bolt-spacing-x-small);
  }

  .c-bolt-navbar--center & {
    @include bolt-mq(xsmall) {
      justify-content: center;
      align-items: center;
      width: 100%;
      margin-right: auto;
      margin-left: auto;
    }
  }

  .c-bolt-navbar--small & {
    padding-bottom: var(--bolt-spacing-y-xsmall);
  }
}

.c-bolt-navbar__title--static,
.c-bolt-navbar__title--link {
  display: flex;
  flex-shrink: 1; // make sure the title can wrap to multiple lines and shrink if needed.
  flex-wrap: nowrap;
  align-items: center;
  align-self: center;
  white-space: nowrap;
}

.c-bolt-navbar__title--link {
  opacity: bolt-opacity(100);
  text-decoration: none;
  transition: all $bolt-navbar-title-transition;

  &:hover {
    opacity: $bolt-global-link-hover-opacity;
  }
}

.c-bolt-navbar__title-icon {
  flex-basis: auto;
  // Fix cross-browser bug where icon shrinks below its minimum natural width - see https://github.com/philipwalton/flexbugs#flexbug-1
  flex-shrink: 0;
  margin: 0 var(--bolt-spacing-x-small) 0 0;
  line-height: 0; // fix vertical alignment of icon + title
}

.c-bolt-navbar__title-text {
  white-space: normal; // wrap to multiple lines if needed
  flex-flow: wrap;
  @include bolt-font-size(medium);
  @include bolt-font-weight(semibold);

  // Adjust the Navbar Title size when being stacked vertically
  .c-bolt-navbar--center & {
    @include bolt-font-size(small);
    @include bolt-font-weight(bold);
    flex-wrap: nowrap; // fixes IE 11 flex-bug causing text to resist staying on one line and prematurely wraps to two-lines -- even if plenty of space is available
  }
}

// Nav items
.c-bolt-navbar__nav {
  flex-shrink: 1;
  width: 100%;
  margin: 0 0 0 var(--bolt-spacing-x-small);
  -webkit-overflow-scrolling: touch;
}

.c-bolt-navbar__nav {
  &:only-child {
    margin: 0 auto;
  }
}

.c-bolt-navbar--align-items-start {
  justify-content: flex-start;
}

.c-bolt-navbar--align-items-center {
  justify-content: center;
}

.c-bolt-navbar--align-items-end {
  justify-content: flex-end;
}
