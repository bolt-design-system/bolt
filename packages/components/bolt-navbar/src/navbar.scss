@import '@bolt/core-v3.x';

/* ------------------------------------ *\
   Navbar
\* ------------------------------------ */

$bolt-navbar-title-transition: $bolt-transition;

bolt-navbar {
  display: block;
  overflow: visible;
  margin-top: 0; // workaround to -.5px in bolt-full-bleed
  margin-bottom: 0; // workaround to -.5px in bolt-full-bleed
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2);

  // @todo: remove once Navbar refactored to have theming classes added to the `.c-bolt-navbar` inner.
  &[width*='full'] {
    @include bolt-full-bleed;
  }
}

.c-bolt-navbar {
  box-sizing: border-box; // required in shadow dom
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  width: 100%;
  max-width: bolt-breakpoint(xxlarge);
  margin: 0 auto;
  padding-top: var(--bolt-spacing-y-small);
  padding-right: var(--bolt-spacing-x-small);
  padding-left: var(--bolt-spacing-x-small);

  > *:not(:last-child) {
    margin-right: var(--bolt-spacing-x-small);
  }

  @include bolt-mq(xsmall) {
    padding-right: $bolt-wrapper-padding;
    padding-left: $bolt-wrapper-padding;
  }

  @include bolt-mq(medium) {
    padding-right: $bolt-wrapper-padding-at-medium-bp;
    padding-left: $bolt-wrapper-padding-at-medium-bp;
  }

  /**
    * 1. Global spacing fallbacks if CSS variables aren't supported
    */
  > * {
    padding-bottom: var(--bolt-spacing-y-small);
  }

  @include bolt-if-browser-supports-display-contents {
    @include bolt-mq($until: xsmall) {
      display: grid;
      flex-direction: row;
      justify-content: center;
      align-content: center;
      align-items: center;
      grid-template-columns: var(--bolt-spacing-x-small) auto 1fr var(
          --bolt-spacing-y-medium
        );
      grid-template-rows: 1fr auto;
      padding-top: 0;
      padding-right: 0;
      padding-left: 0;
    }
  }

  // &--full {
  //   @include bolt-full-bleed;
  //   padding-right: var(--bolt-page-padding-x);
  //   padding-left: var(--bolt-page-padding-x);
  // }

  &--center {
    @include bolt-mq(xsmall) {
      flex-wrap: wrap;
      justify-content: center;
    }

    > *:first-child {
      align-self: center;
      padding-top: var(--bolt-spacing-y-xsmall);
    }

    > *:only-child {
      padding-top: var(--bolt-spacing-y-xsmall);
      padding-bottom: var(--bolt-spacing-y-xsmall);
    }
  }

  // Don't include these inner "full-bleed" styles till Navbar is updated to support theming classes internally,
  // otherwise full bleed + center styling combos are broken
  // @todo: uncomment once the [width*="full"] updates from above ^ are addressed
  // &--full {
  //   @include bolt-full-bleed;
  // }

  &--small {
    @include bolt-mq(xsmall) {
      // Below xsmall this causes unwanted space above mobile menu.
      padding-top: var(--bolt-spacing-y-xsmall);
    }

    > * {
      padding-bottom: var(--bolt-spacing-y-xsmall);
    }
  }
}

// Nav title
.c-bolt-navbar__title {
  display: flex;
  flex-shrink: 1; // make sure the title can wrap to multiple lines and shrink if needed, but only when absolutely necessary (prevents jumps when resizing)
  flex-wrap: nowrap;
  align-items: center;
  align-self: center;
  margin-right: var(--bolt-spacing-x-small); // Maintain space between items
  padding-bottom: var(--bolt-spacing-y-small);
  color: bolt-theme(headline);
  white-space: nowrap;

  @include bolt-mq($until: xsmall) {
    padding-top: var(--bolt-spacing-y-xsmall);
    padding-bottom: var(--bolt-spacing-y-xsmall);
    grid-column: 2 / span 1;
  }

  &:only-child {
    margin-right: auto;
  }

  > *:not(:last-child) {
    margin-right: var(--bolt-spacing-x-small);
  }

  .c-bolt-navbar--center & {
    @include bolt-mq(xsmall) {
      justify-content: center;
      align-items: center;
      width: 100%;
      margin-right: auto;
      margin-left: auto;
    }
  }

  .c-bolt-navbar--small & {
    padding-bottom: var(--bolt-spacing-y-xsmall);
  }
}

.c-bolt-navbar__title--static,
.c-bolt-navbar__title--link {
  display: flex;
  flex-shrink: 1; // make sure the title can wrap to multiple lines and shrink if needed.
  flex-wrap: nowrap;
  align-items: center;
  align-self: center;
  white-space: nowrap;
}

.c-bolt-navbar__title--link {
  opacity: bolt-opacity(100);
  text-decoration: none;
  transition: all $bolt-navbar-title-transition;

  &:hover {
    opacity: $bolt-global-link-hover-opacity;
  }
}

.c-bolt-navbar__title-icon {
  flex-basis: auto;
  // Fix cross-browser bug where icon shrinks below its minimum natural width - see https://github.com/philipwalton/flexbugs#flexbug-1
  flex-shrink: 0;
  margin: 0 var(--bolt-spacing-x-small) 0 0;
  line-height: 0; // fix vertical alignment of icon + title
}

.c-bolt-navbar__title-text {
  flex-flow: wrap;
  font-family: var(--bolt-type-font-family-headline);
  font-size: var(--bolt-type-font-size-medium);
  font-weight: var(--bolt-type-font-weight-semibold);
  line-height: var(--bolt-type-line-height-medium);
  white-space: normal; // wrap to multiple lines if needed

  // Adjust the Navbar Title size when being stacked vertically
  .c-bolt-navbar--center & {
    flex-wrap: nowrap; // fixes IE 11 flex-bug causing text to resist staying on one line and prematurely wraps to two-lines -- even if plenty of space is available
    font-family: var(--bolt-type-font-family-headline);
    font-size: var(--bolt-type-font-size-small);
    font-weight: var(--bolt-type-font-weight-bold);
    line-height: var(--bolt-type-line-height-small);
  }

  @each $breakpoint in $bolt-breakpoints {
    $breakpoint-name: nth($breakpoint, 1);

    @if (
      $breakpoint-name !=
        'xxsmall' and
        $breakpoint-name !=
        'medium' and
        $breakpoint-name !=
        'large' and
        $breakpoint-name !=
        'xlarge' and
        $breakpoint-name !=
        'xxlarge' and
        $breakpoint-name !=
        'xxxlarge' and
        $breakpoint-name !=
        'xxxxlarge'
    ) {
      &--hide-from-#{$breakpoint-name}-bp {
        @include bolt-mq(#{$breakpoint-name}) {
          @include bolt-visuallyhidden;
        }
      }
    }
  }
}

// Nav items
// @todo: I don't think this is used
// .c-bolt-navbar__list {
//   flex-shrink: 1;
//   width: 100%;
//   margin: 0 0 0 var(--bolt-spacing-x-small);
//   -webkit-overflow-scrolling: touch;
// }
// .c-bolt-navbar__list {
//   &:only-child {
//     margin: 0 auto;
//   }
// }

.c-bolt-navbar--align-items-start {
  justify-content: flex-start;
}

.c-bolt-navbar--align-items-center {
  justify-content: center;
}

.c-bolt-navbar--align-items-end {
  justify-content: flex-end;
}

$bolt-navbar-vspacing-small: var(--bolt-spacing-y-small);

.c-bolt-navbar__list {
  display: block;
  flex-shrink: 4; // shrink faster than other components in tight spots
  align-self: center;
  position: relative;
  // padding-bottom: var(--bolt-spacing-y-medium);

  @include bolt-if-browser-supports-display-contents {
    @include bolt-mq($until: xsmall) {
      &.is-ready {
        display: contents;
      }

      @supports (--css: variables) {
        padding-top: var(--bolt-spacing-y-medium, $bolt-navbar-vspacing-small);
      }
    }
  }

  &:not(.is-ready) {
    overflow-x: auto;
  }

  &.is-resizing {
    overflow: hidden;
  }
}

.c-bolt-navbar__list {
  @include bolt-if-browser-supports-display-contents {
    @include bolt-mq($until: xsmall) {
      // @todo
      &.is-ready {
        display: contents;
      }
    }
  }
  // @todo
  &:not(.is-ready) {
    -webkit-overflow-scrolling: touch;
    background-attachment: local, local, scroll, scroll;
    background-position: 0 0, 100% 0, 0 0, 100% 0;
    background-repeat: no-repeat;
    background-size: 4em 100%, 4em 100%, 1em 100%, 1em 100%;
    overflow-x: auto;
  }
}

// .c-bolt-navbar__primary {
.c-bolt-navbar__list {
  @include bolt-if-browser-supports-display-contents {
    @include bolt-mq($until: xsmall) {
      .is-ready & {
        display: contents;
      }
    }
  }

  display: flex;
  margin: 0;
  list-style: none;
}

.c-bolt-navbar__list {
  &.is-ready {
    padding-bottom: var(--bolt-spacing-y-small);
  }
}

.c-bolt-navbar__list-inner {
  display: flex;
}
// .c-bolt-navbar__list-item {
//   display: flex;
//   flex-shrink: 0;
//   white-space: nowrap;
// }

// required so the dropdown can be positioned consistently
.c-bolt-navbar__show-more {
  position: relative;
  display: flex;
  flex-shrink: 0;
  white-space: nowrap;
}

@include bolt-if-browser-supports-display-contents {
  .c-bolt-navbar__show-more {
    @include bolt-mq($until: xsmall) {
      display: contents;
    }
  }
}

.c-bolt-navbar__dropdown-list {
  opacity: bolt-opacity(0);
  transform: translate3d(0, calc(var(--bolt-spacing-y-medium) * -1), 0);
  width: 100%;
  overflow: hidden;
  margin: 0;
  padding: var(--bolt-spacing-y-xsmall) var(--bolt-spacing-x-xsmall);
  list-style: none;
  pointer-events: none;
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1) 0s,
    opacity 0.2s cubic-bezier(0.23, 1, 0.32, 1) 0.1s;

  .c-bolt-navbar--show-dropdown & {
    opacity: bolt-opacity(100);
    transform: translate3d(0, 0, 0);
    pointer-events: auto;
    transition-delay: 0.2s, 0.1s;
  }
}

.c-bolt-navbar__dropdown {
  @include bolt-z-index(tooltip);
  visibility: hidden;
  position: absolute;
  top: 100%;
  right: 0;
  width: calc(100vw - #{var(--bolt-spacing-x-large)});
  min-width: 12rem;
  max-width: 100vw;
  max-height: 0;
  border-bottom-right-radius: $bolt-border-radius;
  border-bottom-left-radius: $bolt-border-radius;
  box-shadow: 0 1px 2px 1px rgba(6, 10, 36, 0.1);
  background-color: bolt-theme(
    (
      xdark: brand-darken-5,
      dark: brand-lighten-20,
      light: secondary,
      xlight: secondary,
    )
  );
  transition: max-height 0.3s cubic-bezier(0.28, 0.11, 0.32, 1) 0s,
    visibility 0s linear 0.3s;

  * {
    white-space: normal;
  }

  @include bolt-mq(xsmall) {
    width: auto;
    max-width: 100%;
  }

  @include bolt-if-browser-supports-display-contents {
    @include bolt-mq($until: xsmall) {
      left: 0;
      width: auto;
      grid-row: 2 / span 1;
      grid-column: 1 / span 6;
    }
  }

  .c-bolt-navbar--show-dropdown & {
    visibility: visible;
    visibility: visible;
    max-height: 400px;
    max-height: calc(100vh - 48px - 48px);
    pointer-events: auto;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    transition-delay: 0.1s, 0s;
  }

  .is-closing &,
  .is-opening & {
    overflow: hidden;
  }
}

// keyframes
@keyframes nav-dropdown {
  0% {
    opacity: bolt-opacity(0);
    transform: translateY(-1em);
  }

  100% {
    opacity: bolt-opacity(100);
    transform: translateY(0);
  }
}

.c-bolt-navbar__show-button {
  @include bolt-button-reset;
  display: block;
  width: 100%;
  color: bolt-theme(headline);
  // background-color: transparent;
  background-color: red;

  position: relative;
  padding: calc(var(--bolt-spacing-y-xsmall) / 2) var(--bolt-spacing-x-xsmall);
  cursor: pointer;
  border-radius: 3px;
  border-radius: $bolt-border-radius;
  // Added border so that &:after,&:focus doesn't change the size of the band
  // We should consider making this thin dotted style a mixin to share with navbar
  border-width: thin;
  border-style: solid;
  border-color: transparent;
  background-color: bolt-theme(secondary, 0.05);
  transition: background-color 0.3s ease;
  white-space: nowrap;

  @include bolt-mq(xsmall) {
    padding: calc(var(--bolt-spacing-y-small) / 2) var(--bolt-spacing-x-small);
  }

  @include bolt-mq($until: xsmall) {
    height: 100%; // fix for height: 100% causing issues on larger screen sizes
    border-left-color: bolt-theme(headline, 0.2);
    border-left-width: 1px;
    border-radius: 0;
  }

  &:before {
    content: '';
    opacity: bolt-opacity(0);
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: 100%;

    overflow: hidden;
    pointer-events: none;
    pointer-events: none;
    background-color: bolt-theme(
      (
        xdark: brand 0.95,
        dark: brand 0.95,
        light: neutral 0.95,
        xlight: neutral 0.95,
      )
    );
    transition: opacity 0.3s ease;
  }

  &:hover {
    background-color: bolt-theme(secondary, 0.15);

    &:before {
      opacity: 0.1;
    }
  }

  &:focus,
  &.is-active {
    border-style: dotted;
    border-color: bolt-theme(primary);
    outline: none;
  }

  &.is-active,
  &:active {
    background-color: bolt-theme(secondary, 0.1);

    &:before {
      opacity: 0.1;
    }
  }

  @include bolt-if-browser-supports-display-contents {
    @include bolt-mq($until: xsmall) {
      .is-ready & {
        grid-row: 1 / span 1;
        grid-column: 5 / span 1;
      }
    }
  }
}

.c-bolt-navbar__show-text {
  position: relative;
  z-index: 10;
  font-family: var(--bolt-type-font-family-body);
  font-size: var(--bolt-type-font-size-small);
  font-weight: var(--bolt-type-font-weight-semibold);
  line-height: var(--bolt-type-line-height-small);

  @include bolt-mq($until: xsmall) {
    @include bolt-visuallyhidden;
  }
}

.c-bolt-navbar__show-icon {
  display: inline-block;
  position: relative;
  z-index: 10;
  font-size: 1em;
  line-height: 0;
  transition: transform 0.2s;

  @include bolt-mq($until: xsmall) {
    font-size: 24px;
  }

  .c-bolt-navbar--show-dropdown & {
    transform: rotate(180deg);
  }
}

.c-bolt-navbar__dropdown-list > .c-bolt-navbar__dropdown-item {
  opacity: bolt-opacity(0);
  transform: translate3d(0, calc(var(--bolt-spacing-x-large) * -1), 0);
  transition: opacity 0.3s cubic-bezier(0.28, 0.11, 0.32, 1),
    transform 0.3s cubic-bezier(0.28, 0.11, 0.32, 1); // transition:
  transition-property: transform, opacity;
}

@for $quantity from 1 through 12 {
  $time: 0;

  @for $i from $quantity through 1 {
    $time: $time + 50;

    bolt-navbar:not(.is-closing)
      .c-bolt-navbar__dropdown-list
      > .c-bolt-navbar__dropdown-item:nth-last-child(n + #{$quantity}),
    bolt-navbar:not(.is-closing)
      .c-bolt-navbar__dropdown-list
      > .c-bolt-navbar__dropdown-item:nth-last-child(n + #{$quantity})
      ~ .c-bolt-navbar__dropdown-item:nth-child(#{$i}) {
      transition-delay: $time + ms;
    }

    .is-closing
      .c-bolt-navbar__dropdown-list
      > .c-bolt-navbar__dropdown-item:nth-child(#{$i}) {
      transition-delay: $i * 17 + ms;
    }
  }

  $time: $time + 50;
}

.c-bolt-navbar--show-dropdown
  .c-bolt-navbar__dropdown-list
  > .c-bolt-navbar__dropdown-item {
  opacity: bolt-opacity(100);
  transform: translate3d(0, 0, 0);
}
