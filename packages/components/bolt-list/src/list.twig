{% set schema = bolt.data.components["@bolt-components-list"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set baseClass = "c-bolt-list" %}
{% set attributes = create_attribute(attributes|default({})) %}

{# Set up checks to validate that the component's prop values are allowed, based on the component's schema. #}
{% set tagOptions = schema.properties.tag.enum %}
{% set displayOptions = schema.properties.display.enum %}
{% set spacingOptions = schema.properties.spacing.enum %}
{% set separatorOptions = schema.properties.separator.enum %}
{% set insetOptions = schema.properties.inset.enum %}
{% set alignOptions = schema.properties.align.enum %}
{% set valignOptions = schema.properties.valign.enum %}

{# Check that the component's current prop values are valid. If not, default to the schema default #}
{% set tag = tag in displayOptions ? tag : schema.properties.tag.default %}
{% set display = display in displayOptions ? display : schema.properties.display.default %}
{% set spacing = spacing in spacingOptions ? spacing : schema.properties.spacing.default %}
{% set separator = separator in separatorOptions ? separator : schema.properties.separator.default %}
{% set inset = inset in spacingOptions ? inset : schema.properties.inset.default %}
{% set align = align in alignOptions ? align : schema.properties.align.default %}
{% set valign = valign in valignOptions ? valign : schema.properties.valign.default %}

{# Move utility classes to a separate attributes object so they can be added to the parent element. This is necessary for most utils to work as expected. #}
{% set parentAttributes = create_attribute({}) %}
{% for class in attributes["class"] %}
  {% if class starts with "u-" %}
    {% set parentAttributes = parentAttributes.addClass(class) %}
    {% set attributes = attributes.removeClass(class) %}
  {% endif %}
{% endfor %}

{# List component's custom element wrapper. #}
<bolt-list
  {% if tag %} tag="{{ tag }}" {% endif %}
  {% if display %} display="{{ display }}" {% endif %}
  {% if spacing %} spacing="{{ spacing }}" {% endif %}
  {% if separator %} separator="{{ separator }}" {% endif %}
  {% if inset %} inset {% endif %}
  {% if align %} align="{{ align }}" {% endif %}
  {% if valign %} valign="{{ valign }}" {% endif %}
  {{ parentAttributes }}
>
  {# This sets none values to not render anything. #}
  {% set spacing = spacing == "none" ? false : spacing %}
  {% set separator = separator == "none" ? false : separator %}

  {# Array of classes based on the defined + default props. #}
  {% set classes = [
    baseClass,
    display in displayOptions ? "#{baseClass}--display-#{display}" : "",
    spacing in spacingOptions ? "#{baseClass}--spacing-#{spacing}" : "",
    separator in separatorOptions ? "#{baseClass}--separator-#{separator}" : "",
    inset == true ? "#{baseClass}--inset",
    align in alignOptions ? "#{baseClass}--align-#{align}" : "",
    valign in valignOptions ? "#{baseClass}--valign-#{valign}" : "",
  ] %}

  <{{ tag }} {{ attributes.addClass(classes) }}>
    {% for item in items %}
      <li class="{{ "#{baseClass}__item" }}">
        {{ item }}
      </li>
    {% endfor %}
  </{{ tag }}>
</bolt-list>
