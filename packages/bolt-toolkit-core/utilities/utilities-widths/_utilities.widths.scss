/* ==========================================================================
   #RESPONSIVE WIDTH UTILITIES
   ========================================================================== */

/* stylelint-disable declaration-no-important  */

// A mixin to spit out our width classes. Pass in the columns we want the widths
// to have, and an optional suffix for responsive widths. E.g. to create thirds
// and quarters for a small breakpoint:
//
// @include widths(3 4, -sm);
$bolt-width-sizes: 1 2 3 4 5 6 7 8 9 10 11 12 !default;

@mixin widths($bolt-widths-columns, $bolt-widths-breakpoint: null) {
  // Loop through the number of columns for each denominator of our fractions.
  @each $bolt-widths-denominator in $bolt-widths-columns {
    // Begin creating a numberator for our fraction up until we hit the
    // denominator.
    @for $bolt-widths-numerator from 1 through $bolt-widths-denominator {
      // Build a class in the format `.u-3/4` or `.u-3-of-4`.
      .u-bolt-width-#{$bolt-widths-numerator}\/#{$bolt-widths-denominator}#{$bolt-widths-breakpoint} {
        width: ($bolt-widths-numerator / $bolt-widths-denominator) * 100% !important;
      }
    }
  }
}

/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-
 * word format (e.g. `.u-2-of-3`). Use these in your markup:
 *
 * <div class="u-width-7/12">
 */
@include widths($bolt-width-sizes);

// Loop over our breakpoints
@each $bolt-breakpoint in $bolt-breakpoints {
  $bolt-breakpoint-name: nth($bolt-breakpoint, 1);
  @include respond-to($bolt-breakpoint-name) {
    @include widths($bolt-width-sizes, \@#{$bolt-breakpoint-name});
  }
}
/* stylelint-enable */
